// Generated by auto imports
export {}
declare global {
  const ANIMATION_PRESETS: typeof import('../../utils/animations')['ANIMATION_PRESETS']
  const API_CONFIG: typeof import('../../utils/constants')['API_CONFIG']
  const AUDIO_CONFIG: typeof import('../../utils/constants')['AUDIO_CONFIG']
  const CSS_ANIMATIONS: typeof import('../../utils/animations')['CSS_ANIMATIONS']
  const DEFAULT_PROBABILITY_CONFIG: typeof import('../../utils/itemProbabilities')['DEFAULT_PROBABILITY_CONFIG']
  const DEV_CONFIG: typeof import('../../utils/constants')['DEV_CONFIG']
  const DURATION: typeof import('../../utils/animations')['DURATION']
  const EASING: typeof import('../../utils/animations')['EASING']
  const ERROR_MESSAGES: typeof import('../../utils/constants')['ERROR_MESSAGES']
  const EXTERNAL_URLS: typeof import('../../utils/constants')['EXTERNAL_URLS']
  const FEATURE_FLAGS: typeof import('../../utils/constants')['FEATURE_FLAGS']
  const GAME_ANIMATIONS: typeof import('../../utils/animations')['GAME_ANIMATIONS']
  const GAME_CONFIG: typeof import('../../utils/constants')['GAME_CONFIG']
  const GAME_CONSTANTS: typeof import('../../utils/gameLogic')['GAME_CONSTANTS']
  const PARTICLE_CONFIGS: typeof import('../../utils/animations')['PARTICLE_CONFIGS']
  const RARITY_CONFIG: typeof import('../../utils/constants')['RARITY_CONFIG']
  const RARITY_PRICE_RANGES: typeof import('../../utils/gameLogic')['RARITY_PRICE_RANGES']
  const RARITY_WEIGHTS: typeof import('../../utils/gameLogic')['RARITY_WEIGHTS']
  const SECURITY_CONFIG: typeof import('../../utils/constants')['SECURITY_CONFIG']
  const SEO_CONFIG: typeof import('../../utils/constants')['SEO_CONFIG']
  const STORAGE_KEYS: typeof import('../../utils/constants')['STORAGE_KEYS']
  const SUCCESS_MESSAGES: typeof import('../../utils/constants')['SUCCESS_MESSAGES']
  const THEME_CONFIG: typeof import('../../utils/constants')['THEME_CONFIG']
  const UI_CONFIG: typeof import('../../utils/constants')['UI_CONFIG']
  const USER_CONFIG: typeof import('../../utils/constants')['USER_CONFIG']
  const VALIDATION_PATTERNS: typeof import('../../utils/constants')['VALIDATION_PATTERNS']
  const VUE_TRANSITIONS: typeof import('../../utils/animations')['VUE_TRANSITIONS']
  const _useShortcuts: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useShortcuts')['_useShortcuts']
  const abortNavigation: typeof import('../../node_modules/nuxt/dist/app/composables/router')['abortNavigation']
  const acceptHMRUpdate: typeof import('../../node_modules/@pinia/nuxt/dist/runtime/composables')['acceptHMRUpdate']
  const addRouteMiddleware: typeof import('../../node_modules/nuxt/dist/app/composables/router')['addRouteMiddleware']
  const animateParallel: typeof import('../../utils/animations')['animateParallel']
  const animateSequence: typeof import('../../utils/animations')['animateSequence']
  const calculateActualHouseEdge: typeof import('../../utils/gameLogic')['calculateActualHouseEdge']
  const calculateConfidenceInterval: typeof import('../../utils/itemProbabilities')['calculateConfidenceInterval']
  const calculateCrashMultiplier: typeof import('../../utils/gameLogic')['calculateCrashMultiplier']
  const calculateEffectiveHouseEdge: typeof import('../../utils/itemProbabilities')['calculateEffectiveHouseEdge']
  const calculateExpectedValue: typeof import('../../utils/itemProbabilities')['calculateExpectedValue']
  const calculateItemProbabilities: typeof import('../../utils/itemProbabilities')['calculateItemProbabilities']
  const calculateRoulettePayout: typeof import('../../utils/gameLogic')['calculateRoulettePayout']
  const calculateSingleItemProbability: typeof import('../../utils/itemProbabilities')['calculateSingleItemProbability']
  const calculateUpgradeProbabilities: typeof import('../../utils/gameLogic')['calculateUpgradeProbabilities']
  const callOnce: typeof import('../../node_modules/nuxt/dist/app/composables/once')['callOnce']
  const camelToKebab: typeof import('../../utils/formatters')['camelToKebab']
  const cancelIdleCallback: typeof import('../../node_modules/nuxt/dist/app/compat/idle-callback')['cancelIdleCallback']
  const capitalizeFirst: typeof import('../../utils/formatters')['capitalizeFirst']
  const clamp: typeof import('../../utils/gameLogic')['clamp']
  const cleanupAnimations: typeof import('../../utils/animations')['cleanupAnimations']
  const clearError: typeof import('../../node_modules/nuxt/dist/app/composables/error')['clearError']
  const clearNuxtData: typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['clearNuxtData']
  const clearNuxtState: typeof import('../../node_modules/nuxt/dist/app/composables/state')['clearNuxtState']
  const computed: typeof import('vue')['computed']
  const createAnimation: typeof import('../../utils/animations')['createAnimation']
  const createError: typeof import('../../node_modules/nuxt/dist/app/composables/error')['createError']
  const createPopper: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/usePopper')['createPopper']
  const customRef: typeof import('vue')['customRef']
  const defineAppConfig: typeof import('../../node_modules/nuxt/dist/app/nuxt')['defineAppConfig']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineLazyHydrationComponent: typeof import('../../node_modules/nuxt/dist/app/composables/lazy-hydration')['defineLazyHydrationComponent']
  const defineNuxtComponent: typeof import('../../node_modules/nuxt/dist/app/composables/component')['defineNuxtComponent']
  const defineNuxtLink: typeof import('../../node_modules/nuxt/dist/app/components/nuxt-link')['defineNuxtLink']
  const defineNuxtPlugin: typeof import('../../node_modules/nuxt/dist/app/nuxt')['defineNuxtPlugin']
  const defineNuxtRouteMiddleware: typeof import('../../node_modules/nuxt/dist/app/composables/router')['defineNuxtRouteMiddleware']
  const definePageMeta: typeof import('../../node_modules/nuxt/dist/pages/runtime/composables')['definePageMeta']
  const definePayloadPlugin: typeof import('../../node_modules/nuxt/dist/app/nuxt')['definePayloadPlugin']
  const definePayloadReducer: typeof import('../../node_modules/nuxt/dist/app/composables/payload')['definePayloadReducer']
  const definePayloadReviver: typeof import('../../node_modules/nuxt/dist/app/composables/payload')['definePayloadReviver']
  const defineShortcuts: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/defineShortcuts')['defineShortcuts']
  const defineStore: typeof import('../../node_modules/@pinia/nuxt/dist/runtime/composables')['defineStore']
  const effect: typeof import('vue')['effect']
  const effectScope: typeof import('vue')['effectScope']
  const formatCompactCurrency: typeof import('../../utils/formatters')['formatCompactCurrency']
  const formatCurrency: typeof import('../../utils/gameLogic')['formatCurrency']
  const formatDate: typeof import('../../utils/formatters')['formatDate']
  const formatDateTime: typeof import('../../utils/formatters')['formatDateTime']
  const formatDuration: typeof import('../../utils/formatters')['formatDuration']
  const formatFileSize: typeof import('../../utils/formatters')['formatFileSize']
  const formatGameResult: typeof import('../../utils/formatters')['formatGameResult']
  const formatHash: typeof import('../../utils/formatters')['formatHash']
  const formatItemName: typeof import('../../utils/formatters')['formatItemName']
  const formatMultiplier: typeof import('../../utils/formatters')['formatMultiplier']
  const formatNumber: typeof import('../../utils/formatters')['formatNumber']
  const formatPercentage: typeof import('../../utils/formatters')['formatPercentage']
  const formatPriceChange: typeof import('../../utils/formatters')['formatPriceChange']
  const formatProbability: typeof import('../../utils/formatters')['formatProbability']
  const formatRarityName: typeof import('../../utils/formatters')['formatRarityName']
  const formatStatus: typeof import('../../utils/formatters')['formatStatus']
  const formatSteamProfileUrl: typeof import('../../utils/formatters')['formatSteamProfileUrl']
  const formatTimeAgo: typeof import('../../utils/formatters')['formatTimeAgo']
  const formatTradeUrl: typeof import('../../utils/formatters')['formatTradeUrl']
  const formatTransactionType: typeof import('../../utils/formatters')['formatTransactionType']
  const formatUsername: typeof import('../../utils/formatters')['formatUsername']
  const formatValidationError: typeof import('../../utils/formatters')['formatValidationError']
  const formatWeaponType: typeof import('../../utils/formatters')['formatWeaponType']
  const generateProvablyFairResult: typeof import('../../utils/gameLogic')['generateProvablyFairResult']
  const generateTargetItems: typeof import('../../utils/gameLogic')['generateTargetItems']
  const generateUniqueId: typeof import('../../utils/gameLogic')['generateUniqueId']
  const generateUpgradePool: typeof import('../../utils/itemProbabilities')['generateUpgradePool']
  const generateUpgradeProbabilities: typeof import('../../utils/itemProbabilities')['generateUpgradeProbabilities']
  const getAppManifest: typeof import('../../node_modules/nuxt/dist/app/composables/manifest')['getAppManifest']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getProbabilityTier: typeof import('../../utils/itemProbabilities')['getProbabilityTier']
  const getRandomRarity: typeof import('../../utils/gameLogic')['getRandomRarity']
  const getRarityColor: typeof import('../../utils/formatters')['getRarityColor']
  const getRarityFromPrice: typeof import('../../utils/gameLogic')['getRarityFromPrice']
  const getRouteRules: typeof import('../../node_modules/nuxt/dist/app/composables/manifest')['getRouteRules']
  const getTypeColor: typeof import('../../utils/formatters')['getTypeColor']
  const h: typeof import('vue')['h']
  const hasInjectionContext: typeof import('vue')['hasInjectionContext']
  const highlightSearchTerm: typeof import('../../utils/formatters')['highlightSearchTerm']
  const inject: typeof import('vue')['inject']
  const injectHead: typeof import('../../node_modules/nuxt/dist/app/composables/head')['injectHead']
  const isNuxtError: typeof import('../../node_modules/nuxt/dist/app/composables/error')['isNuxtError']
  const isPrerendered: typeof import('../../node_modules/nuxt/dist/app/composables/payload')['isPrerendered']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isShallow: typeof import('vue')['isShallow']
  const isValidEmail: typeof import('../../utils/formatters')['isValidEmail']
  const isValidUrl: typeof import('../../utils/formatters')['isValidUrl']
  const isVue2: typeof import('../../node_modules/nuxt/dist/app/compat/vue-demi')['isVue2']
  const isVue3: typeof import('../../node_modules/nuxt/dist/app/compat/vue-demi')['isVue3']
  const kebabToCamel: typeof import('../../utils/formatters')['kebabToCamel']
  const loadPayload: typeof import('../../node_modules/nuxt/dist/app/composables/payload')['loadPayload']
  const markRaw: typeof import('vue')['markRaw']
  const mergeModels: typeof import('vue')['mergeModels']
  const modalInjectionKey: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useModal')['modalInjectionKey']
  const navigateTo: typeof import('../../node_modules/nuxt/dist/app/composables/router')['navigateTo']
  const nextTick: typeof import('vue')['nextTick']
  const normalizeProbabilities: typeof import('../../utils/itemProbabilities')['normalizeProbabilities']
  const observeScrollAnimation: typeof import('../../utils/animations')['observeScrollAnimation']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onNuxtReady: typeof import('../../node_modules/nuxt/dist/app/composables/ready')['onNuxtReady']
  const onPrehydrate: typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['onPrehydrate']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const prefetchComponents: typeof import('../../node_modules/nuxt/dist/app/composables/preload')['prefetchComponents']
  const preloadComponents: typeof import('../../node_modules/nuxt/dist/app/composables/preload')['preloadComponents']
  const preloadPayload: typeof import('../../node_modules/nuxt/dist/app/composables/payload')['preloadPayload']
  const preloadRouteComponents: typeof import('../../node_modules/nuxt/dist/app/composables/preload')['preloadRouteComponents']
  const prerenderRoutes: typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['prerenderRoutes']
  const provide: typeof import('vue')['provide']
  const proxyRefs: typeof import('vue')['proxyRefs']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const reduceMotion: typeof import('../../utils/animations')['reduceMotion']
  const ref: typeof import('vue')['ref']
  const refreshCookie: typeof import('../../node_modules/nuxt/dist/app/composables/cookie')['refreshCookie']
  const refreshNuxtData: typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['refreshNuxtData']
  const reloadNuxtApp: typeof import('../../node_modules/nuxt/dist/app/composables/chunk')['reloadNuxtApp']
  const requestAnimationFramePromise: typeof import('../../utils/animations')['requestAnimationFramePromise']
  const requestIdleCallback: typeof import('../../node_modules/nuxt/dist/app/compat/idle-callback')['requestIdleCallback']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const respectMotionPreference: typeof import('../../utils/animations')['respectMotionPreference']
  const setInterval: typeof import('../../node_modules/nuxt/dist/app/compat/interval')['setInterval']
  const setPageLayout: typeof import('../../node_modules/nuxt/dist/app/composables/router')['setPageLayout']
  const setResponseStatus: typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['setResponseStatus']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const showError: typeof import('../../node_modules/nuxt/dist/app/composables/error')['showError']
  const simulateRouletteResult: typeof import('../../utils/gameLogic')['simulateRouletteResult']
  const simulateUpgradeOutcome: typeof import('../../utils/itemProbabilities')['simulateUpgradeOutcome']
  const simulateUpgradeResult: typeof import('../../utils/gameLogic')['simulateUpgradeResult']
  const slidOverInjectionKey: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useSlideover')['slidOverInjectionKey']
  const slugify: typeof import('../../utils/formatters')['slugify']
  const staggerAnimation: typeof import('../../utils/animations')['staggerAnimation']
  const storeToRefs: typeof import('../../node_modules/@pinia/nuxt/dist/runtime/composables')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const tryUseNuxtApp: typeof import('../../node_modules/nuxt/dist/app/nuxt')['tryUseNuxtApp']
  const unref: typeof import('vue')['unref']
  const updateAppConfig: typeof import('../../node_modules/nuxt/dist/app/config')['updateAppConfig']
  const useAnimations: typeof import('../../composables/useAnimations')['useAnimations']
  const useAppConfig: typeof import('../../node_modules/nuxt/dist/app/config')['useAppConfig']
  const useAsyncData: typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['useAsyncData']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAudio: typeof import('../../composables/useAudio')['useAudio']
  const useBalance: typeof import('../../composables/useBalance')['useBalance']
  const useBalanceStore: typeof import('../../stores/balance')['useBalanceStore']
  const useCSGOFloat: typeof import('../../composables/useCSGOFloat')['useCSGOFloat']
  const useCarouselScroll: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useCarouselScroll')['useCarouselScroll']
  const useColorMode: typeof import('../../node_modules/@nuxtjs/color-mode/dist/runtime/composables')['useColorMode']
  const useCookie: typeof import('../../node_modules/nuxt/dist/app/composables/cookie')['useCookie']
  const useCopyToClipboard: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useCopyToClipboard')['useCopyToClipboard']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useError: typeof import('../../node_modules/nuxt/dist/app/composables/error')['useError']
  const useFetch: typeof import('../../node_modules/nuxt/dist/app/composables/fetch')['useFetch']
  const useFormGroup: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useFormGroup')['useFormGroup']
  const useGameLogic: typeof import('../../composables/useGameLogic')['useGameLogic']
  const useGamesStore: typeof import('../../stores/games')['useGamesStore']
  const useHead: typeof import('../../node_modules/nuxt/dist/app/composables/head')['useHead']
  const useHeadSafe: typeof import('../../node_modules/nuxt/dist/app/composables/head')['useHeadSafe']
  const useHydration: typeof import('../../node_modules/nuxt/dist/app/composables/hydrate')['useHydration']
  const useId: typeof import('vue')['useId']
  const useInjectButtonGroup: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useButtonGroup')['useInjectButtonGroup']
  const useInventory: typeof import('../../composables/useInventory')['useInventory']
  const useInventoryStore: typeof import('../../stores/inventory')['useInventoryStore']
  const useLazyAsyncData: typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['useLazyAsyncData']
  const useLazyFetch: typeof import('../../node_modules/nuxt/dist/app/composables/fetch')['useLazyFetch']
  const useLink: typeof import('vue-router')['useLink']
  const useLoadingIndicator: typeof import('../../node_modules/nuxt/dist/app/composables/loading-indicator')['useLoadingIndicator']
  const useModal: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useModal')['useModal']
  const useModel: typeof import('vue')['useModel']
  const useNuxtApp: typeof import('../../node_modules/nuxt/dist/app/nuxt')['useNuxtApp']
  const useNuxtData: typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['useNuxtData']
  const usePinia: typeof import('../../node_modules/@pinia/nuxt/dist/runtime/composables')['usePinia']
  const usePopper: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/usePopper')['usePopper']
  const usePreviewMode: typeof import('../../node_modules/nuxt/dist/app/composables/preview')['usePreviewMode']
  const useProvideButtonGroup: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useButtonGroup')['useProvideButtonGroup']
  const useRequestEvent: typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useRequestEvent']
  const useRequestFetch: typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useRequestFetch']
  const useRequestHeader: typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useRequestHeader']
  const useRequestHeaders: typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useRequestHeaders']
  const useRequestURL: typeof import('../../node_modules/nuxt/dist/app/composables/url')['useRequestURL']
  const useResponseHeader: typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useResponseHeader']
  const useRoute: typeof import('../../node_modules/nuxt/dist/app/composables/router')['useRoute']
  const useRouteAnnouncer: typeof import('../../node_modules/nuxt/dist/app/composables/route-announcer')['useRouteAnnouncer']
  const useRouter: typeof import('../../node_modules/nuxt/dist/app/composables/router')['useRouter']
  const useRuntimeConfig: typeof import('../../node_modules/nuxt/dist/app/nuxt')['useRuntimeConfig']
  const useRuntimeHook: typeof import('../../node_modules/nuxt/dist/app/composables/runtime-hook')['useRuntimeHook']
  const useScript: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScript']
  const useScriptClarity: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptClarity']
  const useScriptCloudflareWebAnalytics: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptCloudflareWebAnalytics']
  const useScriptCrisp: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptCrisp']
  const useScriptEventPage: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptEventPage']
  const useScriptFathomAnalytics: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptFathomAnalytics']
  const useScriptGoogleAdsense: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptGoogleAdsense']
  const useScriptGoogleAnalytics: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptGoogleAnalytics']
  const useScriptGoogleMaps: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptGoogleMaps']
  const useScriptGoogleTagManager: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptGoogleTagManager']
  const useScriptHotjar: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptHotjar']
  const useScriptIntercom: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptIntercom']
  const useScriptLemonSqueezy: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptLemonSqueezy']
  const useScriptMatomoAnalytics: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptMatomoAnalytics']
  const useScriptMetaPixel: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptMetaPixel']
  const useScriptNpm: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptNpm']
  const useScriptPlausibleAnalytics: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptPlausibleAnalytics']
  const useScriptRybbitAnalytics: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptRybbitAnalytics']
  const useScriptSegment: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptSegment']
  const useScriptSnapchatPixel: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptSnapchatPixel']
  const useScriptStripe: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptStripe']
  const useScriptTriggerConsent: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptTriggerConsent']
  const useScriptTriggerElement: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptTriggerElement']
  const useScriptUmamiAnalytics: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptUmamiAnalytics']
  const useScriptVimeoPlayer: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptVimeoPlayer']
  const useScriptXPixel: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptXPixel']
  const useScriptYouTubePlayer: typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptYouTubePlayer']
  const useSeoMeta: typeof import('../../node_modules/nuxt/dist/app/composables/head')['useSeoMeta']
  const useServerHead: typeof import('../../node_modules/nuxt/dist/app/composables/head')['useServerHead']
  const useServerHeadSafe: typeof import('../../node_modules/nuxt/dist/app/composables/head')['useServerHeadSafe']
  const useServerSeoMeta: typeof import('../../node_modules/nuxt/dist/app/composables/head')['useServerSeoMeta']
  const useShadowRoot: typeof import('vue')['useShadowRoot']
  const useShortcuts: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useShortcuts')['useShortcuts']
  const useSlideover: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useSlideover')['useSlideover']
  const useSlots: typeof import('vue')['useSlots']
  const useState: typeof import('../../node_modules/nuxt/dist/app/composables/state')['useState']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useTimer: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useTimer')['useTimer']
  const useToast: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useToast')['useToast']
  const useTransitionState: typeof import('vue')['useTransitionState']
  const useUI: typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useUI')['useUI']
  const useUpgrade: typeof import('../../composables/useUpgrade')['useUpgrade']
  const useUpgradeStore: typeof import('../../stores/upgrade')['useUpgradeStore']
  const useUserStore: typeof import('../../stores/user')['useUserStore']
  const validateProbabilityDistribution: typeof import('../../utils/itemProbabilities')['validateProbabilityDistribution']
  const validateUpgradeParameters: typeof import('../../utils/gameLogic')['validateUpgradeParameters']
  const waitForFrames: typeof import('../../utils/animations')['waitForFrames']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const withCtx: typeof import('vue')['withCtx']
  const withDirectives: typeof import('vue')['withDirectives']
  const withKeys: typeof import('vue')['withKeys']
  const withMemo: typeof import('vue')['withMemo']
  const withModifiers: typeof import('vue')['withModifiers']
  const withScopeId: typeof import('vue')['withScopeId']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { ProbabilityConfig } from '../../utils/itemProbabilities'
  import('../../utils/itemProbabilities')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly ANIMATION_PRESETS: UnwrapRef<typeof import('../../utils/animations')['ANIMATION_PRESETS']>
    readonly API_CONFIG: UnwrapRef<typeof import('../../utils/constants')['API_CONFIG']>
    readonly AUDIO_CONFIG: UnwrapRef<typeof import('../../utils/constants')['AUDIO_CONFIG']>
    readonly CSS_ANIMATIONS: UnwrapRef<typeof import('../../utils/animations')['CSS_ANIMATIONS']>
    readonly DEFAULT_PROBABILITY_CONFIG: UnwrapRef<typeof import('../../utils/itemProbabilities')['DEFAULT_PROBABILITY_CONFIG']>
    readonly DEV_CONFIG: UnwrapRef<typeof import('../../utils/constants')['DEV_CONFIG']>
    readonly DURATION: UnwrapRef<typeof import('../../utils/animations')['DURATION']>
    readonly EASING: UnwrapRef<typeof import('../../utils/animations')['EASING']>
    readonly ERROR_MESSAGES: UnwrapRef<typeof import('../../utils/constants')['ERROR_MESSAGES']>
    readonly EXTERNAL_URLS: UnwrapRef<typeof import('../../utils/constants')['EXTERNAL_URLS']>
    readonly FEATURE_FLAGS: UnwrapRef<typeof import('../../utils/constants')['FEATURE_FLAGS']>
    readonly GAME_ANIMATIONS: UnwrapRef<typeof import('../../utils/animations')['GAME_ANIMATIONS']>
    readonly GAME_CONFIG: UnwrapRef<typeof import('../../utils/constants')['GAME_CONFIG']>
    readonly GAME_CONSTANTS: UnwrapRef<typeof import('../../utils/gameLogic')['GAME_CONSTANTS']>
    readonly PARTICLE_CONFIGS: UnwrapRef<typeof import('../../utils/animations')['PARTICLE_CONFIGS']>
    readonly RARITY_CONFIG: UnwrapRef<typeof import('../../utils/constants')['RARITY_CONFIG']>
    readonly RARITY_PRICE_RANGES: UnwrapRef<typeof import('../../utils/gameLogic')['RARITY_PRICE_RANGES']>
    readonly RARITY_WEIGHTS: UnwrapRef<typeof import('../../utils/gameLogic')['RARITY_WEIGHTS']>
    readonly SECURITY_CONFIG: UnwrapRef<typeof import('../../utils/constants')['SECURITY_CONFIG']>
    readonly SEO_CONFIG: UnwrapRef<typeof import('../../utils/constants')['SEO_CONFIG']>
    readonly STORAGE_KEYS: UnwrapRef<typeof import('../../utils/constants')['STORAGE_KEYS']>
    readonly SUCCESS_MESSAGES: UnwrapRef<typeof import('../../utils/constants')['SUCCESS_MESSAGES']>
    readonly THEME_CONFIG: UnwrapRef<typeof import('../../utils/constants')['THEME_CONFIG']>
    readonly UI_CONFIG: UnwrapRef<typeof import('../../utils/constants')['UI_CONFIG']>
    readonly USER_CONFIG: UnwrapRef<typeof import('../../utils/constants')['USER_CONFIG']>
    readonly VALIDATION_PATTERNS: UnwrapRef<typeof import('../../utils/constants')['VALIDATION_PATTERNS']>
    readonly VUE_TRANSITIONS: UnwrapRef<typeof import('../../utils/animations')['VUE_TRANSITIONS']>
    readonly _useShortcuts: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useShortcuts')['_useShortcuts']>
    readonly abortNavigation: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/router')['abortNavigation']>
    readonly acceptHMRUpdate: UnwrapRef<typeof import('../../node_modules/@pinia/nuxt/dist/runtime/composables')['acceptHMRUpdate']>
    readonly addRouteMiddleware: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/router')['addRouteMiddleware']>
    readonly animateParallel: UnwrapRef<typeof import('../../utils/animations')['animateParallel']>
    readonly animateSequence: UnwrapRef<typeof import('../../utils/animations')['animateSequence']>
    readonly calculateActualHouseEdge: UnwrapRef<typeof import('../../utils/gameLogic')['calculateActualHouseEdge']>
    readonly calculateConfidenceInterval: UnwrapRef<typeof import('../../utils/itemProbabilities')['calculateConfidenceInterval']>
    readonly calculateCrashMultiplier: UnwrapRef<typeof import('../../utils/gameLogic')['calculateCrashMultiplier']>
    readonly calculateEffectiveHouseEdge: UnwrapRef<typeof import('../../utils/itemProbabilities')['calculateEffectiveHouseEdge']>
    readonly calculateExpectedValue: UnwrapRef<typeof import('../../utils/itemProbabilities')['calculateExpectedValue']>
    readonly calculateItemProbabilities: UnwrapRef<typeof import('../../utils/itemProbabilities')['calculateItemProbabilities']>
    readonly calculateRoulettePayout: UnwrapRef<typeof import('../../utils/gameLogic')['calculateRoulettePayout']>
    readonly calculateSingleItemProbability: UnwrapRef<typeof import('../../utils/itemProbabilities')['calculateSingleItemProbability']>
    readonly calculateUpgradeProbabilities: UnwrapRef<typeof import('../../utils/gameLogic')['calculateUpgradeProbabilities']>
    readonly callOnce: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/once')['callOnce']>
    readonly camelToKebab: UnwrapRef<typeof import('../../utils/formatters')['camelToKebab']>
    readonly cancelIdleCallback: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/compat/idle-callback')['cancelIdleCallback']>
    readonly capitalizeFirst: UnwrapRef<typeof import('../../utils/formatters')['capitalizeFirst']>
    readonly clamp: UnwrapRef<typeof import('../../utils/gameLogic')['clamp']>
    readonly cleanupAnimations: UnwrapRef<typeof import('../../utils/animations')['cleanupAnimations']>
    readonly clearError: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/error')['clearError']>
    readonly clearNuxtData: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['clearNuxtData']>
    readonly clearNuxtState: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/state')['clearNuxtState']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createAnimation: UnwrapRef<typeof import('../../utils/animations')['createAnimation']>
    readonly createError: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/error')['createError']>
    readonly createPopper: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/usePopper')['createPopper']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAppConfig: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/nuxt')['defineAppConfig']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly defineLazyHydrationComponent: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/lazy-hydration')['defineLazyHydrationComponent']>
    readonly defineNuxtComponent: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/component')['defineNuxtComponent']>
    readonly defineNuxtLink: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/components/nuxt-link')['defineNuxtLink']>
    readonly defineNuxtPlugin: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/nuxt')['defineNuxtPlugin']>
    readonly defineNuxtRouteMiddleware: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/router')['defineNuxtRouteMiddleware']>
    readonly definePageMeta: UnwrapRef<typeof import('../../node_modules/nuxt/dist/pages/runtime/composables')['definePageMeta']>
    readonly definePayloadPlugin: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/nuxt')['definePayloadPlugin']>
    readonly definePayloadReducer: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/payload')['definePayloadReducer']>
    readonly definePayloadReviver: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/payload')['definePayloadReviver']>
    readonly defineShortcuts: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/defineShortcuts')['defineShortcuts']>
    readonly defineStore: UnwrapRef<typeof import('../../node_modules/@pinia/nuxt/dist/runtime/composables')['defineStore']>
    readonly effect: UnwrapRef<typeof import('vue')['effect']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly formatCompactCurrency: UnwrapRef<typeof import('../../utils/formatters')['formatCompactCurrency']>
    readonly formatCurrency: UnwrapRef<typeof import('../../utils/gameLogic')['formatCurrency']>
    readonly formatDate: UnwrapRef<typeof import('../../utils/formatters')['formatDate']>
    readonly formatDateTime: UnwrapRef<typeof import('../../utils/formatters')['formatDateTime']>
    readonly formatDuration: UnwrapRef<typeof import('../../utils/formatters')['formatDuration']>
    readonly formatFileSize: UnwrapRef<typeof import('../../utils/formatters')['formatFileSize']>
    readonly formatGameResult: UnwrapRef<typeof import('../../utils/formatters')['formatGameResult']>
    readonly formatHash: UnwrapRef<typeof import('../../utils/formatters')['formatHash']>
    readonly formatItemName: UnwrapRef<typeof import('../../utils/formatters')['formatItemName']>
    readonly formatMultiplier: UnwrapRef<typeof import('../../utils/formatters')['formatMultiplier']>
    readonly formatNumber: UnwrapRef<typeof import('../../utils/formatters')['formatNumber']>
    readonly formatPercentage: UnwrapRef<typeof import('../../utils/formatters')['formatPercentage']>
    readonly formatPriceChange: UnwrapRef<typeof import('../../utils/formatters')['formatPriceChange']>
    readonly formatProbability: UnwrapRef<typeof import('../../utils/formatters')['formatProbability']>
    readonly formatRarityName: UnwrapRef<typeof import('../../utils/formatters')['formatRarityName']>
    readonly formatStatus: UnwrapRef<typeof import('../../utils/formatters')['formatStatus']>
    readonly formatSteamProfileUrl: UnwrapRef<typeof import('../../utils/formatters')['formatSteamProfileUrl']>
    readonly formatTimeAgo: UnwrapRef<typeof import('../../utils/formatters')['formatTimeAgo']>
    readonly formatTradeUrl: UnwrapRef<typeof import('../../utils/formatters')['formatTradeUrl']>
    readonly formatTransactionType: UnwrapRef<typeof import('../../utils/formatters')['formatTransactionType']>
    readonly formatUsername: UnwrapRef<typeof import('../../utils/formatters')['formatUsername']>
    readonly formatValidationError: UnwrapRef<typeof import('../../utils/formatters')['formatValidationError']>
    readonly formatWeaponType: UnwrapRef<typeof import('../../utils/formatters')['formatWeaponType']>
    readonly generateProvablyFairResult: UnwrapRef<typeof import('../../utils/gameLogic')['generateProvablyFairResult']>
    readonly generateTargetItems: UnwrapRef<typeof import('../../utils/gameLogic')['generateTargetItems']>
    readonly generateUniqueId: UnwrapRef<typeof import('../../utils/gameLogic')['generateUniqueId']>
    readonly generateUpgradePool: UnwrapRef<typeof import('../../utils/itemProbabilities')['generateUpgradePool']>
    readonly generateUpgradeProbabilities: UnwrapRef<typeof import('../../utils/itemProbabilities')['generateUpgradeProbabilities']>
    readonly getAppManifest: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/manifest')['getAppManifest']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getProbabilityTier: UnwrapRef<typeof import('../../utils/itemProbabilities')['getProbabilityTier']>
    readonly getRandomRarity: UnwrapRef<typeof import('../../utils/gameLogic')['getRandomRarity']>
    readonly getRarityColor: UnwrapRef<typeof import('../../utils/formatters')['getRarityColor']>
    readonly getRarityFromPrice: UnwrapRef<typeof import('../../utils/gameLogic')['getRarityFromPrice']>
    readonly getRouteRules: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/manifest')['getRouteRules']>
    readonly getTypeColor: UnwrapRef<typeof import('../../utils/formatters')['getTypeColor']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly hasInjectionContext: UnwrapRef<typeof import('vue')['hasInjectionContext']>
    readonly highlightSearchTerm: UnwrapRef<typeof import('../../utils/formatters')['highlightSearchTerm']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly injectHead: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/head')['injectHead']>
    readonly isNuxtError: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/error')['isNuxtError']>
    readonly isPrerendered: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/payload')['isPrerendered']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly isShallow: UnwrapRef<typeof import('vue')['isShallow']>
    readonly isValidEmail: UnwrapRef<typeof import('../../utils/formatters')['isValidEmail']>
    readonly isValidUrl: UnwrapRef<typeof import('../../utils/formatters')['isValidUrl']>
    readonly isVue2: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/compat/vue-demi')['isVue2']>
    readonly isVue3: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/compat/vue-demi')['isVue3']>
    readonly kebabToCamel: UnwrapRef<typeof import('../../utils/formatters')['kebabToCamel']>
    readonly loadPayload: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/payload')['loadPayload']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly mergeModels: UnwrapRef<typeof import('vue')['mergeModels']>
    readonly modalInjectionKey: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useModal')['modalInjectionKey']>
    readonly navigateTo: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/router')['navigateTo']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly normalizeProbabilities: UnwrapRef<typeof import('../../utils/itemProbabilities')['normalizeProbabilities']>
    readonly observeScrollAnimation: UnwrapRef<typeof import('../../utils/animations')['observeScrollAnimation']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onNuxtReady: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ready')['onNuxtReady']>
    readonly onPrehydrate: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['onPrehydrate']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly onWatcherCleanup: UnwrapRef<typeof import('vue')['onWatcherCleanup']>
    readonly prefetchComponents: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/preload')['prefetchComponents']>
    readonly preloadComponents: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/preload')['preloadComponents']>
    readonly preloadPayload: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/payload')['preloadPayload']>
    readonly preloadRouteComponents: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/preload')['preloadRouteComponents']>
    readonly prerenderRoutes: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['prerenderRoutes']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly proxyRefs: UnwrapRef<typeof import('vue')['proxyRefs']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly reduceMotion: UnwrapRef<typeof import('../../utils/animations')['reduceMotion']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly refreshCookie: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/cookie')['refreshCookie']>
    readonly refreshNuxtData: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['refreshNuxtData']>
    readonly reloadNuxtApp: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/chunk')['reloadNuxtApp']>
    readonly requestAnimationFramePromise: UnwrapRef<typeof import('../../utils/animations')['requestAnimationFramePromise']>
    readonly requestIdleCallback: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/compat/idle-callback')['requestIdleCallback']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly respectMotionPreference: UnwrapRef<typeof import('../../utils/animations')['respectMotionPreference']>
    readonly setInterval: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/compat/interval')['setInterval']>
    readonly setPageLayout: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/router')['setPageLayout']>
    readonly setResponseStatus: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['setResponseStatus']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly showError: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/error')['showError']>
    readonly simulateRouletteResult: UnwrapRef<typeof import('../../utils/gameLogic')['simulateRouletteResult']>
    readonly simulateUpgradeOutcome: UnwrapRef<typeof import('../../utils/itemProbabilities')['simulateUpgradeOutcome']>
    readonly simulateUpgradeResult: UnwrapRef<typeof import('../../utils/gameLogic')['simulateUpgradeResult']>
    readonly slidOverInjectionKey: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useSlideover')['slidOverInjectionKey']>
    readonly slugify: UnwrapRef<typeof import('../../utils/formatters')['slugify']>
    readonly staggerAnimation: UnwrapRef<typeof import('../../utils/animations')['staggerAnimation']>
    readonly storeToRefs: UnwrapRef<typeof import('../../node_modules/@pinia/nuxt/dist/runtime/composables')['storeToRefs']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly tryUseNuxtApp: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/nuxt')['tryUseNuxtApp']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly updateAppConfig: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/config')['updateAppConfig']>
    readonly useAnimations: UnwrapRef<typeof import('../../composables/useAnimations')['useAnimations']>
    readonly useAppConfig: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/config')['useAppConfig']>
    readonly useAsyncData: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['useAsyncData']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAudio: UnwrapRef<typeof import('../../composables/useAudio')['useAudio']>
    readonly useBalance: UnwrapRef<typeof import('../../composables/useBalance')['useBalance']>
    readonly useBalanceStore: UnwrapRef<typeof import('../../stores/balance')['useBalanceStore']>
    readonly useCSGOFloat: UnwrapRef<typeof import('../../composables/useCSGOFloat')['useCSGOFloat']>
    readonly useCarouselScroll: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useCarouselScroll')['useCarouselScroll']>
    readonly useColorMode: UnwrapRef<typeof import('../../node_modules/@nuxtjs/color-mode/dist/runtime/composables')['useColorMode']>
    readonly useCookie: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/cookie')['useCookie']>
    readonly useCopyToClipboard: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useCopyToClipboard')['useCopyToClipboard']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useError: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/error')['useError']>
    readonly useFetch: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/fetch')['useFetch']>
    readonly useFormGroup: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useFormGroup')['useFormGroup']>
    readonly useGameLogic: UnwrapRef<typeof import('../../composables/useGameLogic')['useGameLogic']>
    readonly useGamesStore: UnwrapRef<typeof import('../../stores/games')['useGamesStore']>
    readonly useHead: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/head')['useHead']>
    readonly useHeadSafe: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/head')['useHeadSafe']>
    readonly useHydration: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/hydrate')['useHydration']>
    readonly useId: UnwrapRef<typeof import('vue')['useId']>
    readonly useInjectButtonGroup: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useButtonGroup')['useInjectButtonGroup']>
    readonly useInventory: UnwrapRef<typeof import('../../composables/useInventory')['useInventory']>
    readonly useInventoryStore: UnwrapRef<typeof import('../../stores/inventory')['useInventoryStore']>
    readonly useLazyAsyncData: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['useLazyAsyncData']>
    readonly useLazyFetch: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/fetch')['useLazyFetch']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useLoadingIndicator: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/loading-indicator')['useLoadingIndicator']>
    readonly useModal: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useModal')['useModal']>
    readonly useModel: UnwrapRef<typeof import('vue')['useModel']>
    readonly useNuxtApp: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/nuxt')['useNuxtApp']>
    readonly useNuxtData: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/asyncData')['useNuxtData']>
    readonly usePinia: UnwrapRef<typeof import('../../node_modules/@pinia/nuxt/dist/runtime/composables')['usePinia']>
    readonly usePopper: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/usePopper')['usePopper']>
    readonly usePreviewMode: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/preview')['usePreviewMode']>
    readonly useProvideButtonGroup: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useButtonGroup')['useProvideButtonGroup']>
    readonly useRequestEvent: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useRequestEvent']>
    readonly useRequestFetch: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useRequestFetch']>
    readonly useRequestHeader: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useRequestHeader']>
    readonly useRequestHeaders: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useRequestHeaders']>
    readonly useRequestURL: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/url')['useRequestURL']>
    readonly useResponseHeader: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/ssr')['useResponseHeader']>
    readonly useRoute: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/router')['useRoute']>
    readonly useRouteAnnouncer: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/route-announcer')['useRouteAnnouncer']>
    readonly useRouter: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/router')['useRouter']>
    readonly useRuntimeConfig: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/nuxt')['useRuntimeConfig']>
    readonly useRuntimeHook: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/runtime-hook')['useRuntimeHook']>
    readonly useScript: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScript']>
    readonly useScriptClarity: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptClarity']>
    readonly useScriptCloudflareWebAnalytics: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptCloudflareWebAnalytics']>
    readonly useScriptCrisp: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptCrisp']>
    readonly useScriptEventPage: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptEventPage']>
    readonly useScriptFathomAnalytics: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptFathomAnalytics']>
    readonly useScriptGoogleAdsense: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptGoogleAdsense']>
    readonly useScriptGoogleAnalytics: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptGoogleAnalytics']>
    readonly useScriptGoogleMaps: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptGoogleMaps']>
    readonly useScriptGoogleTagManager: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptGoogleTagManager']>
    readonly useScriptHotjar: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptHotjar']>
    readonly useScriptIntercom: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptIntercom']>
    readonly useScriptLemonSqueezy: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptLemonSqueezy']>
    readonly useScriptMatomoAnalytics: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptMatomoAnalytics']>
    readonly useScriptMetaPixel: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptMetaPixel']>
    readonly useScriptNpm: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptNpm']>
    readonly useScriptPlausibleAnalytics: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptPlausibleAnalytics']>
    readonly useScriptRybbitAnalytics: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptRybbitAnalytics']>
    readonly useScriptSegment: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptSegment']>
    readonly useScriptSnapchatPixel: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptSnapchatPixel']>
    readonly useScriptStripe: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptStripe']>
    readonly useScriptTriggerConsent: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptTriggerConsent']>
    readonly useScriptTriggerElement: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptTriggerElement']>
    readonly useScriptUmamiAnalytics: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptUmamiAnalytics']>
    readonly useScriptVimeoPlayer: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptVimeoPlayer']>
    readonly useScriptXPixel: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptXPixel']>
    readonly useScriptYouTubePlayer: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/script-stubs')['useScriptYouTubePlayer']>
    readonly useSeoMeta: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/head')['useSeoMeta']>
    readonly useServerHead: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/head')['useServerHead']>
    readonly useServerHeadSafe: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/head')['useServerHeadSafe']>
    readonly useServerSeoMeta: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/head')['useServerSeoMeta']>
    readonly useShadowRoot: UnwrapRef<typeof import('vue')['useShadowRoot']>
    readonly useShortcuts: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useShortcuts')['useShortcuts']>
    readonly useSlideover: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useSlideover')['useSlideover']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useState: UnwrapRef<typeof import('../../node_modules/nuxt/dist/app/composables/state')['useState']>
    readonly useTemplateRef: UnwrapRef<typeof import('vue')['useTemplateRef']>
    readonly useTimer: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useTimer')['useTimer']>
    readonly useToast: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useToast')['useToast']>
    readonly useTransitionState: UnwrapRef<typeof import('vue')['useTransitionState']>
    readonly useUI: UnwrapRef<typeof import('../../node_modules/@nuxt/ui/dist/runtime/composables/useUI')['useUI']>
    readonly useUpgrade: UnwrapRef<typeof import('../../composables/useUpgrade')['useUpgrade']>
    readonly useUpgradeStore: UnwrapRef<typeof import('../../stores/upgrade')['useUpgradeStore']>
    readonly useUserStore: UnwrapRef<typeof import('../../stores/user')['useUserStore']>
    readonly validateProbabilityDistribution: UnwrapRef<typeof import('../../utils/itemProbabilities')['validateProbabilityDistribution']>
    readonly validateUpgradeParameters: UnwrapRef<typeof import('../../utils/gameLogic')['validateUpgradeParameters']>
    readonly waitForFrames: UnwrapRef<typeof import('../../utils/animations')['waitForFrames']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
    readonly withCtx: UnwrapRef<typeof import('vue')['withCtx']>
    readonly withDirectives: UnwrapRef<typeof import('vue')['withDirectives']>
    readonly withKeys: UnwrapRef<typeof import('vue')['withKeys']>
    readonly withMemo: UnwrapRef<typeof import('vue')['withMemo']>
    readonly withModifiers: UnwrapRef<typeof import('vue')['withModifiers']>
    readonly withScopeId: UnwrapRef<typeof import('vue')['withScopeId']>
  }
}